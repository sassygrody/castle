RED="\[\033[1;91m\]"
YELLOW="\[\033[1;93m\]"
GREEN="\[\033[1;92m\]"
BLUE="\[\033[1;94m\]"
WHITE="\[\033[1;97m\]"
GRAY="\[\033[1;30m\]"
PINK="\[\033[1;35m\]"
ORANGE="\[\033[33;1m\]"
COLOR_RESET="\W\[$(tput sgr0)\]"

function is_git_repository {
  git branch > /dev/null 2>&1
}

function set_git_prompt {
  git_status="$(git status 2> /dev/null)"
  remote_pattern="Your branch is (.*) of"
  diverge_pattern="Your branch and (.*) have diverged"
  branch_pattern="^On branch ([^${IFS}]*)"

  if [[ ${git_status} =~ "working tree clean" ]]; then
    GIT_STATE_COLOR="${WHITE}"
  elif [[ ${git_status} =~ "working directory clean" ]]; then
    GIT_STATE_COLOR="${WHITE}"
  elif [[ ${git_status} =~ "Changes to be committed" ]]; then
    GIT_STATE_COLOR="${YELLOW}"
  else
    GIT_STATE_COLOR="${RED}"
  fi

  if [[ ${git_status} =~ ${remote_pattern} ]]; then
    if [[ ${BASH_REMATCH[1]} == "ahead" ]]; then
      GIT_REMOTE_STATE=" ↑"
    else
      GIT_REMOTE_STATE=" ↓"
    fi
  else
    GIT_REMOTE_STATE=""
  fi

  if [[ ${git_status} =~ ${diverge_pattern} ]]; then
    GIT_REMOTE_STATE=" ↕"
  fi

  if [[ ${git_status} =~ ${branch_pattern} ]]; then
    GIT_BRANCH_NAME=${BASH_REMATCH[1]}
  fi

  GIT_PROMPT=" ${GIT_STATE_COLOR}(${GIT_BRANCH_NAME})${GIT_REMOTE_STATE}"
}

function set_bash_prompt {
  if is_git_repository ; then
    set_git_prompt
  else
    GIT_PROMPT=""
  fi
  PS1="${COLOR_RESET} ${GIT_PROMPT} $ "
}

PROMPT_COMMAND=set_bash_prompt

function goog {
  local IFS='+'
  local query="$*"
  open "https://www.google.com/#q=${query}"
}
